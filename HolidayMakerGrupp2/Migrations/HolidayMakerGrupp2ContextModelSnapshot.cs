// <auto-generated />
using System;
using HolidayMakerGrupp2.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HolidayMakerGrupp2.Migrations
{
    [DbContext(typeof(HolidayMakerGrupp2Context))]
    partial class HolidayMakerGrupp2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Finnish_Swedish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Accomodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<double>("DistanceBeach")
                        .HasColumnType("float");

                    b.Property<double>("DistanceDowntown")
                        .HasColumnType("float");

                    b.Property<bool>("KidsClub")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NightEntertainment")
                        .HasColumnType("bit");

                    b.Property<int>("NrOfRooms")
                        .HasColumnType("int");

                    b.Property<bool>("Pool")
                        .HasColumnType("bit");

                    b.Property<bool>("Restaurants")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Accomodation");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccomodationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ComfortId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("ExtraBed")
                        .HasColumnType("bit");

                    b.Property<int>("NrOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("NrOfKids")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("TransportationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationsId");

                    b.HasIndex("ComfortId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransportationId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Comfort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Comfort");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("GuId")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("GuID");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PhoneNr")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("TransportationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransportationId");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccomodationsId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Review1")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Review");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationsId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccomodationsId")
                        .HasColumnType("int");

                    b.Property<int>("NrOfBeds")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationsId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.RoomInBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("BookingId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomInBooking");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Transportation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Departure")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TransportType")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transportation");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccomodationsId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationsId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Accomodation", b =>
                {
                    b.HasOne("HolidayMakerGrupp2.Models.Database.City", "City")
                        .WithMany("Accomodations")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Accomodations_Cities")
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Booking", b =>
                {
                    b.HasOne("HolidayMakerGrupp2.Models.Database.Accomodation", "Accomodations")
                        .WithMany("Bookings")
                        .HasForeignKey("AccomodationsId")
                        .HasConstraintName("FK_Booking_Accomodations")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Comfort", "Comfort")
                        .WithMany("Bookings")
                        .HasForeignKey("ComfortId")
                        .HasConstraintName("FK_Booking_Comfort")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Booking_Customer")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Transportation", "Transportation")
                        .WithMany("Bookings")
                        .HasForeignKey("TransportationId")
                        .HasConstraintName("FK_Booking_Transportation")
                        .IsRequired();

                    b.Navigation("Accomodations");

                    b.Navigation("Comfort");

                    b.Navigation("Customer");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Receipt", b =>
                {
                    b.HasOne("HolidayMakerGrupp2.Models.Database.Booking", "Booking")
                        .WithMany("Receipts")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_Receipts_Booking")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Customer", "Customer")
                        .WithMany("Receipts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Receipts_Customer")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Transportation", "Transportation")
                        .WithMany("Receipts")
                        .HasForeignKey("TransportationId")
                        .HasConstraintName("FK_Receipts_Transportation")
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Customer");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Review", b =>
                {
                    b.HasOne("HolidayMakerGrupp2.Models.Database.Accomodation", "Accomodations")
                        .WithMany("Reviews")
                        .HasForeignKey("AccomodationsId")
                        .HasConstraintName("FK_Review_Accomodations")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Review_Customer")
                        .IsRequired();

                    b.Navigation("Accomodations");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Room", b =>
                {
                    b.HasOne("HolidayMakerGrupp2.Models.Database.Accomodation", "Accomodations")
                        .WithMany("Rooms")
                        .HasForeignKey("AccomodationsId")
                        .HasConstraintName("FK_Room_Accomodations")
                        .IsRequired();

                    b.Navigation("Accomodations");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.RoomInBooking", b =>
                {
                    b.HasOne("HolidayMakerGrupp2.Models.Database.Booking", "Booking")
                        .WithMany("RoomInBookings")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_RoomInBooking_Booking")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Room", "Room")
                        .WithMany("RoomInBookings")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_RoomInBooking_Room")
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Wishlist", b =>
                {
                    b.HasOne("HolidayMakerGrupp2.Models.Database.Accomodation", "Accomodations")
                        .WithMany("Wishlists")
                        .HasForeignKey("AccomodationsId")
                        .HasConstraintName("FK_Wishlist_Accomodations")
                        .IsRequired();

                    b.HasOne("HolidayMakerGrupp2.Models.Database.Customer", "Customer")
                        .WithMany("Wishlists")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Wishlist_Customer")
                        .IsRequired();

                    b.Navigation("Accomodations");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Accomodation", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Booking", b =>
                {
                    b.Navigation("Receipts");

                    b.Navigation("RoomInBookings");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.City", b =>
                {
                    b.Navigation("Accomodations");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Comfort", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Customer", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Receipts");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Room", b =>
                {
                    b.Navigation("RoomInBookings");
                });

            modelBuilder.Entity("HolidayMakerGrupp2.Models.Database.Transportation", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Receipts");
                });
#pragma warning restore 612, 618
        }
    }
}
